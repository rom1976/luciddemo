{"version":3,"sources":["Count.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["Count","init","useState","count","setCount","onClick","Login","userID","setUserID","password","setPassword","userData","setUserData","message","setMessage","loggedin","setLoggedIn","menulist","setMenuList","org","setOrg","searchTerm","setSearchTerm","orderCount","useRef","useEffect","lucidapiToken","axios","get","headers","Authorization","then","response","data","menuItems","Error","mnItems","JSON","stringify","mnItemsObj","parse","className","style","textAlign","height","overflow","type","placeholder","onChange","e","target","value","map","a","itemName","filter","val","toLowerCase","includes","key","id","Card","border","width","Header","fontWeight","Math","random","Body","Title","itemRate","Text","foodTypeName","icon","faSeedling","size","color","faEgg","name","console","log","Button","post","auth","username","errorCode","defaultPropertyName","sessionStorage","setItem","getItem","catch","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df7c7916.chunk.js","sourcesContent":["import {useState} from 'react';\n\nfunction Count({ init }) {\n    \n    const [count, setCount] =useState(0)\n  \n    return (\n      <div>\n        \n        <p> {count}</p>\n        <button onClick={() => setCount(count + 1)}>Add</button>\n      </div>\n    )\n  }\n\n\n  export default Count;\n\n\n  ","import { Button } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect,useRef } from \"react\";\r\nimport ItemCount from \"./Count\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faEgg} from '@fortawesome/free-solid-svg-icons'\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons'\r\nimport Count from \"./Count\";\r\n\r\n\r\nconst Login = () =>{\r\n \r\n     const [userID, setUserID] = useState('');\r\n     const [password, setPassword] = useState('');\r\n     const [userData, setUserData] = useState([]);\r\n     const [message, setMessage] = useState('');\r\n     const [loggedin, setLoggedIn] = useState(false);\r\n     const [menulist, setMenuList] = useState([]);\r\n     const [org,setOrg] = useState([]);\r\n     const [searchTerm,setSearchTerm] = useState('');\r\n     \r\n     \r\n     const menuRef = useRef([]);\r\n     let orderCount =0;\r\n\r\n\r\n     \r\n   \r\n    const submitHandler = () =>{\r\n       \r\n        axios.post('https://demo.lucidits.com/LUCIDAPI/V1/Login',{},{auth: {\r\n             \r\n              username: userID,\r\n              password: password\r\n            }})\r\n      .then((response)=>{ \r\n         \r\n          console.log(response.data);\r\n          setUserData(response.data);\r\n          if (userData.errorCode===1) throw (userData.message);\r\n\r\n          //console.log(userData);\r\n          setOrg(response.data.defaultPropertyName);\r\n          setMessage('Login Success');\r\n          sessionStorage.setItem('key', userData.lucidapiToken);\r\n          console.log(sessionStorage.getItem('key'));\r\n         \r\n        })\r\n        .catch((error)=>{\r\n            setMessage(userData.message);\r\n        })\r\n       \r\n }\r\n    \r\n\r\n     const LoginHandler = (e) =>{\r\n         setUserID(e.target.value);\r\n         console.log(userID);\r\n     }\r\n     \r\n\r\n     const LoginPasswordHandler =(e) =>{\r\n        setPassword(e.target.value);\r\n        console.log(password)\r\n     }\r\n  \r\n    \r\n    \r\n     useEffect(()=>{\r\n        if (userData.lucidapiToken)\r\n        setLoggedIn(true);\r\n        axios.get('https://demo.lucidits.com/LUCIDAPI/V1/GetOnlineOrderMenuItemListPageDetails',{\r\n            headers: { Authorization: `Bearer ${userData.lucidapiToken}` } })\r\n             .then((response)=>{\r\n                 setMenuList(response.data.response.menuItems)\r\n             }).then((Error)=> setMessage('Failed'));\r\n     },[loggedin,userData])\r\n\r\n     const mnItems = JSON.stringify(menulist);\r\n     const mnItemsObj =  JSON.parse(mnItems);\r\n     \r\n     let temp='';\r\n     \r\n      if (loggedin){\r\n          return(\r\n                <>\r\n                    <div className='container'>\r\n                    <div className ='row'>\r\n                        <h1>{org}</h1>\r\n                           <h1 className='mb-4' style={{textAlign:\"center\"}}>Menu Items List</h1>\r\n                              <div style={{height:'5rem', overflow:'hidden'}}>\r\n                                   <input type=\"text\" placeholder=\"seach...\" onChange={ e=>setSearchTerm(e.target.value)} />\r\n                              { \r\n                               mnItemsObj.map(a => a.itemName).filter((val) =>\r\n                                  {\r\n                                    if(searchTerm == \"\"){\r\n        \r\n                                       \r\n                                     return\r\n                                      }\r\n                                    else if(val.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                                    return val;\r\n                                         }\r\n                                }).map((val,key)=>{\r\n                                    return <div>{val} </div>\r\n                                  })\r\n                                  \r\n                                  }\r\n                                </div> \r\n\r\n                            { mnItemsObj.map((a,id) => {\r\n                                return(\r\n                                    <div className='col mb-3' >\r\n                                <Card key ={id} border=\"primary\" style={{ width: '19rem', textAlign:\"center\" }}>\r\n                                <Card.Header key = {Math.random()} style = {{fontWeight:\"bold\"}}>  {a.itemName}</Card.Header>\r\n                                <Card.Body key = {Math.random()}>\r\n                                <Card.Title key = {Math.random()}> {a.itemRate}/- </Card.Title>\r\n                                <Card.Text key = {Math.random()}>\r\n                                \r\n                                {a.foodTypeName==='Veg' &&  <FontAwesomeIcon icon={faSeedling} size='2x' color='green' /> }\r\n                                {a.foodTypeName==='Non Veg' &&  <FontAwesomeIcon icon={faEgg} size='2x' color='yellow' /> }\r\n                                </Card.Text>\r\n                                {temp = a.itemName}\r\n                                <Count init={orderCount+=1}/>\r\n\r\n                              \r\n                                 </Card.Body>\r\n                             \r\n                               </Card>\r\n                               </div>\r\n                                )\r\n                              }\r\n                              )}\r\n                             \r\n                      </div>\r\n                                \r\n                       \r\n                    \r\n                               </div>\r\n                </>\r\n          )\r\n    \r\n      }else{\r\n    return(\r\n        <>\r\n           <div className='container'>\r\n           <h1>{org}</h1>\r\n               <div className='row'>\r\n                   <div className='col-md-4'></div>\r\n                   <div className='col-md-4'>\r\n                       <div>\r\n                           <h3>Login</h3>\r\n                           <label>\r\n                               User Name\r\n                           </label>\r\n                           <input type='text' name='loginName' placeholder='yourname' onChange={LoginHandler}/><br/>\r\n\r\n                           <label>\r\n                               Password\r\n                           </label>\r\n                           <input type ='password' name='loginPassword' placeholder='yourpassword' onChange={LoginPasswordHandler}/>\r\n                           <Button type=\"button\" className=\"btn btn-primary\" onClick={submitHandler}>Submit</Button>\r\n                       </div>\r\n                   </div>\r\n                   <div className='col-md-4'>\r\n                     <h2> {message} </h2>\r\n                   </div>\r\n               </div>\r\n\r\n           </div>\r\n            \r\n        </>\r\n    )\r\n      }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import Login from './Login';\n\n\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Login />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}