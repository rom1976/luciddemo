{"ast":null,"code":"var _jsxFileName = \"/Users/romulaspaulm/react/luciddemo/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ItemCount from \"./Count\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEgg } from '@fortawesome/free-solid-svg-icons';\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons';\nimport Count from \"./Count\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [userID, setUserID] = useState('');\n  const [password, setPassword] = useState('');\n  const [userData, setUserData] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loggedin, setLoggedIn] = useState(false);\n  const [menulist, setMenuList] = useState([]);\n  const [org, setOrg] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const menuRef = useRef([]);\n  let orderCount = 0;\n\n  const submitHandler = () => {\n    axios.post('https://demo.lucidits.com/LUCIDAPI/V1/Login', {}, {\n      auth: {\n        username: userID,\n        password: password\n      }\n    }).then(response => {\n      console.log(response.data);\n      setUserData(response.data);\n      if (userData.errorCode === 1) throw userData.message; //console.log(userData);\n\n      setOrg(response.data.defaultPropertyName);\n      setMessage('Login Success');\n      sessionStorage.setItem('key', userData.lucidapiToken);\n      console.log(sessionStorage.getItem('key'));\n    }).catch(error => {\n      setMessage(userData.message);\n    });\n  };\n\n  const LoginHandler = e => {\n    setUserID(e.target.value);\n    console.log(userID);\n  };\n\n  const LoginPasswordHandler = e => {\n    setPassword(e.target.value);\n    console.log(password);\n  };\n\n  useEffect(() => {\n    if (userData.lucidapiToken) setLoggedIn(true);\n    axios.get('https://demo.lucidits.com/LUCIDAPI/V1/GetOnlineOrderMenuItemListPageDetails', {\n      headers: {\n        Authorization: `Bearer ${userData.lucidapiToken}`\n      }\n    }).then(response => {\n      setMenuList(response.data.response.menuItems);\n    }).then(Error => setMessage('Failed'));\n  }, [loggedin, userData]);\n  const mnItems = JSON.stringify(menulist);\n  const mnItemsObj = JSON.parse(mnItems);\n  let temp = '';\n\n  if (loggedin) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: org\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-4\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Menu Items List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '5rem',\n              overflow: 'hidden'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"seach...\",\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 36\n            }, this), mnItemsObj.map(a => a.itemName).filter(val => {\n              if (searchTerm == \"\") {\n                return;\n              } else if (val.toLowerCase().includes(searchTerm.toLowerCase())) {\n                return val;\n              }\n            }).map((val, key) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [val, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 44\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }, this), mnItemsObj.map((a, id) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                border: \"primary\",\n                style: {\n                  width: '19rem',\n                  textAlign: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: [\"  \", a.itemName]\n                }, Math.random(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\" \", a.itemRate, \"/- \"]\n                  }, Math.random(), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: [a.foodTypeName === 'Veg' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faSeedling,\n                      size: \"2x\",\n                      color: \"green\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 61\n                    }, this), a.foodTypeName === 'Non Veg' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faEgg,\n                      size: \"2x\",\n                      color: \"yellow\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 65\n                    }, this)]\n                  }, Math.random(), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 33\n                  }, this), temp = a.itemName, /*#__PURE__*/_jsxDEV(Count, {\n                    init: orderCount += 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 33\n                  }, this)]\n                }, Math.random(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 33\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: org\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"loginName\",\n                placeholder: \"yourname\",\n                onChange: LoginHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 112\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"loginPassword\",\n                placeholder: \"yourpassword\",\n                onChange: LoginPasswordHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: submitHandler,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" \", message, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 12\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(Login, \"MqZRWS0BFYlqgbrfCKIdYqN2LDo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/romulaspaulm/react/luciddemo/src/Login.js"],"names":["Button","Card","axios","useState","useEffect","useRef","ItemCount","FontAwesomeIcon","faEgg","faSeedling","Count","Login","userID","setUserID","password","setPassword","userData","setUserData","message","setMessage","loggedin","setLoggedIn","menulist","setMenuList","org","setOrg","searchTerm","setSearchTerm","menuRef","orderCount","submitHandler","post","auth","username","then","response","console","log","data","errorCode","defaultPropertyName","sessionStorage","setItem","lucidapiToken","getItem","catch","error","LoginHandler","e","target","value","LoginPasswordHandler","get","headers","Authorization","menuItems","Error","mnItems","JSON","stringify","mnItemsObj","parse","temp","textAlign","height","overflow","map","a","itemName","filter","val","toLowerCase","includes","key","id","width","fontWeight","Math","random","itemRate","foodTypeName"],"mappings":"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","sourcesContent":["import { Button } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect,useRef } from \"react\";\r\nimport ItemCount from \"./Count\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faEgg} from '@fortawesome/free-solid-svg-icons'\r\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons'\r\nimport Count from \"./Count\";\r\n\r\n\r\nconst Login = () =>{\r\n \r\n     const [userID, setUserID] = useState('');\r\n     const [password, setPassword] = useState('');\r\n     const [userData, setUserData] = useState([]);\r\n     const [message, setMessage] = useState('');\r\n     const [loggedin, setLoggedIn] = useState(false);\r\n     const [menulist, setMenuList] = useState([]);\r\n     const [org,setOrg] = useState([]);\r\n     const [searchTerm,setSearchTerm] = useState('');\r\n     \r\n     \r\n     const menuRef = useRef([]);\r\n     let orderCount =0;\r\n\r\n\r\n     \r\n   \r\n    const submitHandler = () =>{\r\n       \r\n        axios.post('https://demo.lucidits.com/LUCIDAPI/V1/Login',{},{auth: {\r\n             \r\n              username: userID,\r\n              password: password\r\n            }})\r\n      .then((response)=>{ \r\n         \r\n          console.log(response.data);\r\n          setUserData(response.data);\r\n          if (userData.errorCode===1) throw (userData.message);\r\n\r\n          //console.log(userData);\r\n          setOrg(response.data.defaultPropertyName);\r\n          setMessage('Login Success');\r\n          sessionStorage.setItem('key', userData.lucidapiToken);\r\n          console.log(sessionStorage.getItem('key'));\r\n         \r\n        })\r\n        .catch((error)=>{\r\n            setMessage(userData.message);\r\n        })\r\n       \r\n }\r\n    \r\n\r\n     const LoginHandler = (e) =>{\r\n         setUserID(e.target.value);\r\n         console.log(userID);\r\n     }\r\n     \r\n\r\n     const LoginPasswordHandler =(e) =>{\r\n        setPassword(e.target.value);\r\n        console.log(password)\r\n     }\r\n  \r\n    \r\n    \r\n     useEffect(()=>{\r\n        if (userData.lucidapiToken)\r\n        setLoggedIn(true);\r\n        axios.get('https://demo.lucidits.com/LUCIDAPI/V1/GetOnlineOrderMenuItemListPageDetails',{\r\n            headers: { Authorization: `Bearer ${userData.lucidapiToken}` } })\r\n             .then((response)=>{\r\n                 setMenuList(response.data.response.menuItems)\r\n             }).then((Error)=> setMessage('Failed'));\r\n     },[loggedin,userData])\r\n\r\n     const mnItems = JSON.stringify(menulist);\r\n     const mnItemsObj =  JSON.parse(mnItems);\r\n     \r\n     let temp='';\r\n     \r\n      if (loggedin){\r\n          return(\r\n                <>\r\n                    <div className='container'>\r\n                    <div className ='row'>\r\n                        <h1>{org}</h1>\r\n                           <h1 className='mb-4' style={{textAlign:\"center\"}}>Menu Items List</h1>\r\n                              <div style={{height:'5rem', overflow:'hidden'}}>\r\n                                   <input type=\"text\" placeholder=\"seach...\" onChange={ e=>setSearchTerm(e.target.value)} />\r\n                              { \r\n                               mnItemsObj.map(a => a.itemName).filter((val) =>\r\n                                  {\r\n                                    if(searchTerm == \"\"){\r\n        \r\n                                       \r\n                                     return\r\n                                      }\r\n                                    else if(val.toLowerCase().includes(searchTerm.toLowerCase())){\r\n                                    return val;\r\n                                         }\r\n                                }).map((val,key)=>{\r\n                                    return <div>{val} </div>\r\n                                  })\r\n                                  \r\n                                  }\r\n                                </div> \r\n\r\n                            { mnItemsObj.map((a,id) => {\r\n                                return(\r\n                                    <div className='col mb-3' >\r\n                                <Card key ={id} border=\"primary\" style={{ width: '19rem', textAlign:\"center\" }}>\r\n                                <Card.Header key = {Math.random()} style = {{fontWeight:\"bold\"}}>  {a.itemName}</Card.Header>\r\n                                <Card.Body key = {Math.random()}>\r\n                                <Card.Title key = {Math.random()}> {a.itemRate}/- </Card.Title>\r\n                                <Card.Text key = {Math.random()}>\r\n                                \r\n                                {a.foodTypeName==='Veg' &&  <FontAwesomeIcon icon={faSeedling} size='2x' color='green' /> }\r\n                                {a.foodTypeName==='Non Veg' &&  <FontAwesomeIcon icon={faEgg} size='2x' color='yellow' /> }\r\n                                </Card.Text>\r\n                                {temp = a.itemName}\r\n                                <Count init={orderCount+=1}/>\r\n\r\n                              \r\n                                 </Card.Body>\r\n                             \r\n                               </Card>\r\n                               </div>\r\n                                )\r\n                              }\r\n                              )}\r\n                             \r\n                      </div>\r\n                                \r\n                       \r\n                    \r\n                               </div>\r\n                </>\r\n          )\r\n    \r\n      }else{\r\n    return(\r\n        <>\r\n           <div className='container'>\r\n           <h1>{org}</h1>\r\n               <div className='row'>\r\n                   <div className='col-md-4'></div>\r\n                   <div className='col-md-4'>\r\n                       <div>\r\n                           <h3>Login</h3>\r\n                           <label>\r\n                               User Name\r\n                           </label>\r\n                           <input type='text' name='loginName' placeholder='yourname' onChange={LoginHandler}/><br/>\r\n\r\n                           <label>\r\n                               Password\r\n                           </label>\r\n                           <input type ='password' name='loginPassword' placeholder='yourpassword' onChange={LoginPasswordHandler}/>\r\n                           <Button type=\"button\" className=\"btn btn-primary\" onClick={submitHandler}>Submit</Button>\r\n                       </div>\r\n                   </div>\r\n                   <div className='col-md-4'>\r\n                     <h2> {message} </h2>\r\n                   </div>\r\n               </div>\r\n\r\n           </div>\r\n            \r\n        </>\r\n    )\r\n      }\r\n\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}