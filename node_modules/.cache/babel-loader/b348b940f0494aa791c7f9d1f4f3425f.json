{"ast":null,"code":"import{Card}from\"react-bootstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faEgg}from\"@fortawesome/free-solid-svg-icons\";import{faSeedling}from\"@fortawesome/free-solid-svg-icons\";import Count from\"./Count\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var MenuItems=function MenuItems(_ref){var items=_ref.items;// console.log('Menu arg '+{val});\nreturn items.map(function(a,id){return/*#__PURE__*/_jsx(\"div\",{className:\"col mb-3\",children:/*#__PURE__*/_jsxs(Card,{border:\"primary\",style:{width:\"19rem\",textAlign:\"center\"},children:[/*#__PURE__*/_jsxs(Card.Header,{style:{fontWeight:\"bold\"},children:[\" \",a.itemName]},Math.random()),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[\" \",a.itemRate,\"/- \"]},Math.random()),/*#__PURE__*/_jsxs(Card.Text,{children:[a.foodTypeName===\"Veg\"&&/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSeedling,size:\"2x\",color:\"green\"}),a.foodTypeName===\"Non Veg\"&&/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faEgg,size:\"2x\",color:\"red\"})]},Math.random()),/*#__PURE__*/_jsx(Count,{})]},Math.random())]},id)});});};export default MenuItems;","map":{"version":3,"sources":["/Users/romulaspaulm/react/luciddemo/src/MenuItems.js"],"names":["Card","FontAwesomeIcon","faEgg","faSeedling","Count","MenuItems","items","map","a","id","width","textAlign","fontWeight","itemName","Math","random","itemRate","foodTypeName"],"mappings":"AAAA,OAASA,IAAT,KAAqB,iBAArB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,KAAT,KAAsB,mCAAtB,CACA,OAASC,UAAT,KAA2B,mCAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAc,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAE7B;AAEC,MAAOA,CAAAA,KAAK,CAACC,GAAN,CAAU,SAACC,CAAD,CAAIC,EAAJ,CAAW,CAC1B,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,MAAC,IAAD,EAEE,MAAM,CAAC,SAFT,CAGE,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,SAAS,CAAE,QAA7B,CAHT,wBAKE,MAAC,IAAD,CAAM,MAAN,EAAiC,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAxC,WACG,GADH,CAEGJ,CAAC,CAACK,QAFL,GAAkBC,IAAI,CAACC,MAAL,EAAlB,CALF,cASE,MAAC,IAAD,CAAM,IAAN,yBACE,MAAC,IAAD,CAAM,KAAN,gBAAkCP,CAAC,CAACQ,QAApC,SAAiBF,IAAI,CAACC,MAAL,EAAjB,CADF,cAEE,MAAC,IAAD,CAAM,IAAN,YACGP,CAAC,CAACS,YAAF,GAAmB,KAAnB,eACC,KAAC,eAAD,EAAiB,IAAI,CAAEd,UAAvB,CAAmC,IAAI,CAAC,IAAxC,CAA6C,KAAK,CAAC,OAAnD,EAFJ,CAIGK,CAAC,CAACS,YAAF,GAAmB,SAAnB,eACC,KAAC,eAAD,EAAiB,IAAI,CAAEf,KAAvB,CAA8B,IAAI,CAAC,IAAnC,CAAwC,KAAK,CAAC,KAA9C,EALJ,GAAgBY,IAAI,CAACC,MAAL,EAAhB,CAFF,cAWE,KAAC,KAAD,IAXF,GAAgBD,IAAI,CAACC,MAAL,EAAhB,CATF,GACON,EADP,CADF,EADF,CA2BD,CA5BM,CAAP,CA8BC,CAlCL,CAqCI,cAAeJ,CAAAA,SAAf","sourcesContent":["import { Card } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEgg } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSeedling } from \"@fortawesome/free-solid-svg-icons\";\nimport Count from \"./Count\";\n\nconst MenuItems = ({items }) => {\n    \n   // console.log('Menu arg '+{val});\n    \n    return items.map((a, id) => {    \n      return (\n        <div className=\"col mb-3\">\n          <Card\n            key={id}\n            border=\"primary\"\n            style={{ width: \"19rem\", textAlign: \"center\" }}\n           >\n            <Card.Header key={Math.random()} style={{ fontWeight: \"bold\" }}>\n              {\" \"}\n              {a.itemName}\n            </Card.Header>\n            <Card.Body key={Math.random()}>\n              <Card.Title key={Math.random()}> {a.itemRate}/- </Card.Title>\n              <Card.Text key={Math.random()}>\n                {a.foodTypeName === \"Veg\" && (\n                  <FontAwesomeIcon icon={faSeedling} size=\"2x\" color=\"green\" />\n                )}\n                {a.foodTypeName === \"Non Veg\" && (\n                  <FontAwesomeIcon icon={faEgg} size=\"2x\" color=\"red\" />\n                )}\n              </Card.Text>\n\n              <Count />\n            </Card.Body>\n          </Card>\n        </div>\n      );\n    }\n     );\n    }\n\n\n    export default MenuItems;"]},"metadata":{},"sourceType":"module"}